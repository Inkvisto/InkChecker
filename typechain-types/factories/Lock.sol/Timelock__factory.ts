/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Timelock, TimelockInterface } from "../../Lock.sol/Timelock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "txId",
        type: "bytes32",
      },
    ],
    name: "Discarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "txId",
        type: "bytes32",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "txId",
        type: "bytes32",
      },
    ],
    name: "Queued",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_func",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "addToQueue",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "amount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_msg",
        type: "string",
      },
    ],
    name: "demo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_txId",
        type: "bytes32",
      },
    ],
    name: "discard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_func",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNextTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "message",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_msg",
        type: "string",
      },
    ],
    name: "prepareData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "queue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610c08806100326000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b14610160578063939a79ac14610198578063aa8c217c146101ab578063e21f37ce146101c1578063eabf2ede146101d657600080fd5b806311ee8382146100965780636ba94afa146100be57806372cd7667146100eb5780637c10dea61461010d5780637e3d04ab1461014d575b600080fd5b3480156100a257600080fd5b506100ab6101f6565b6040519081526020015b60405180910390f35b3480156100ca57600080fd5b506100de6100d93660046107e3565b610208565b6040516100b59190610875565b3480156100f757600080fd5b5061010b61010636600461088f565b610235565b005b34801561011957600080fd5b5061013d61012836600461088f565b60036020526000908152604090205460ff1681565b60405190151581526020016100b5565b6100de61015b3660046108a8565b610306565b34801561016c57600080fd5b50600054610180906001600160a01b031681565b6040516001600160a01b0390911681526020016100b5565b61010b6101a63660046107e3565b610580565b3480156101b757600080fd5b506100ab60025481565b3480156101cd57600080fd5b506100de610596565b3480156101e257600080fd5b506100ab6101f13660046108a8565b610624565b600061020342603c610946565b905090565b6060828260405160200161021d929190610990565b60405160208183030381529060405290505b92915050565b6000546001600160a01b031633146102685760405162461bcd60e51b815260040161025f906109ac565b60405180910390fd5b60008181526003602052604090205460ff166102b35760405162461bcd60e51b815260206004820152600a6024820152691b9bdd081c5d595d595960b21b604482015260640161025f565b60008181526003602052604090819020805460ff19169055517f944a599cfdd5b846e414b21145baca9f843c87c22763ede761f421d1e2894b8f906102fb9083815260200190565b60405180910390a150565b6000546060906001600160a01b031633146103335760405162461bcd60e51b815260040161025f906109ac565b81421161036e5760405162461bcd60e51b8152602060048201526009602482015268746f6f206561726c7960b81b604482015260640161025f565b4261037c6201518084610946565b116103b65760405162461bcd60e51b815260206004820152600a6024820152691d1e08195e1c1a5c995960b21b604482015260640161025f565b6000888888888888886040516020016103d597969594939291906109d3565b60408051601f1981840301815291815281516020928301206000818152600390935291205490915060ff1661043a5760405162461bcd60e51b815260206004820152600b60248201526a6e6f74207175657565642160a81b604482015260640161025f565b6000818152600360205260409020805460ff1916905560608715610497578888604051610468929190610a22565b6040519081900381206104819189908990602001610a32565b60405160208183030381529060405290506104d1565b86868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293505050505b6000808b6001600160a01b031687846040516104ed9190610a56565b60006040518083038185875af1925050503d806000811461052a576040519150601f19603f3d011682016040523d82523d6000602084013e61052f565b606091505b50915091508161053e57600080fd5b6040518481527fa74c8847d513feba22a0f0cb38d53081abf97562cdb293926ba243689e7c41ca9060200160405180910390a19b9a5050505050505050505050565b600161058d828483610b11565b50503460025550565b600180546105a390610a88565b80601f01602080910402602001604051908101604052809291908181526020018280546105cf90610a88565b801561061c5780601f106105f15761010080835404028352916020019161061c565b820191906000526020600020905b8154815290600101906020018083116105ff57829003601f168201915b505050505081565b600080546001600160a01b0316331461064f5760405162461bcd60e51b815260040161025f906109ac565b61065a600042610946565b8211801561067357506106706201518042610946565b82105b6106b35760405162461bcd60e51b81526020600482015260116024820152700696e76616c69642074696d657374616d7607c1b604482015260640161025f565b6000888888888888886040516020016106d297969594939291906109d3565b60408051601f1981840301815291815281516020928301206000818152600390935291205490915060ff161561073b5760405162461bcd60e51b815260206004820152600e60248201526d185b1c9958591e481c5d595d595960921b604482015260640161025f565b60008181526003602052604090819020805460ff19166001179055517f030c1c58a8158dbc150ce42bdc8c37982386e9ccda2771c0013699136416922f906107869083815260200190565b60405180910390a198975050505050505050565b60008083601f8401126107ac57600080fd5b50813567ffffffffffffffff8111156107c457600080fd5b6020830191508360208285010111156107dc57600080fd5b9250929050565b600080602083850312156107f657600080fd5b823567ffffffffffffffff81111561080d57600080fd5b6108198582860161079a565b90969095509350505050565b60005b83811015610840578181015183820152602001610828565b50506000910152565b60008151808452610861816020860160208601610825565b601f01601f19169290920160200192915050565b6020815260006108886020830184610849565b9392505050565b6000602082840312156108a157600080fd5b5035919050565b600080600080600080600060a0888a0312156108c357600080fd5b87356001600160a01b03811681146108da57600080fd5b9650602088013567ffffffffffffffff808211156108f757600080fd5b6109038b838c0161079a565b909850965060408a013591508082111561091c57600080fd5b506109298a828b0161079a565b989b979a5095989597966060870135966080013595509350505050565b8082018082111561022f57634e487b7160e01b600052601160045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815260006109a4602083018486610967565b949350505050565b6020808252600d908201526c6e6f7420616e206f776e65722160981b604082015260600190565b6001600160a01b038816815260a0602082018190526000906109f8908301888a610967565b8281036040840152610a0b818789610967565b606084019590955250506080015295945050505050565b8183823760009101908152919050565b6001600160e01b031984168152818360048301376000910160040190815292915050565b60008251610a68818460208701610825565b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610a9c57607f821691505b602082108103610abc57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610b0c57600081815260208120601f850160051c81016020861015610ae95750805b601f850160051c820191505b81811015610b0857828155600101610af5565b5050505b505050565b67ffffffffffffffff831115610b2957610b29610a72565b610b3d83610b378354610a88565b83610ac2565b6000601f841160018114610b715760008515610b595750838201355b600019600387901b1c1916600186901b178355610bcb565b600083815260209020601f19861690835b82811015610ba25786850135825560209485019460019092019101610b82565b5086821015610bbf5760001960f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea26469706673582212203809c7a6326dd583d63ead36562803e750d948314f6426c712b37f8c090d62a164736f6c63430008110033";

type TimelockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TimelockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Timelock__factory extends ContractFactory {
  constructor(...args: TimelockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Timelock> {
    return super.deploy(overrides || {}) as Promise<Timelock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Timelock {
    return super.attach(address) as Timelock;
  }
  override connect(signer: Signer): Timelock__factory {
    return super.connect(signer) as Timelock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimelockInterface {
    return new utils.Interface(_abi) as TimelockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Timelock {
    return new Contract(address, _abi, signerOrProvider) as Timelock;
  }
}
